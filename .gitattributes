import pandas as pd
import numpy as np
from sklearn.linear_model import Ridge
from sklearn.metrics import mean_squared_error
from math import sqrt

url = "https://raw.githubusercontent.com/alexeygrigorev/datasets/master/housing.csv"
housing_data = pd.read_csv(url)

filtered_data = housing_data[housing_data['ocean_proximity'].isin(['<1H OCEAN', 'INLAND'])]

selected_columns = ['latitude', 'longitude', 'housing_median_age', 'total_rooms', 'total_bedrooms', 'population', 'households', 'median_income', 'median_house_value']
filtered_data = filtered_data[selected_columns]

seed = 9

filtered_data = filtered_data.sample(frac=1, random_state=seed)

distribution
train_end = int(0.6 * len(filtered_data))
val_end = int(0.8 * len(filtered_data))

train = filtered_data[:train_end]
val = filtered_data[train_end:val_end]
test = filtered_data[val_end:]

train['median_house_value'] = np.log1p(train['median_house_value'])
test['median_house_value'] = np.log1p(test['median_house_value'])

train = train.fillna(0)
test = test.fillna(0)

X_train, y_train = train.drop('median_house_value', axis=1), train['median_house_value']
X_test, y_test = test.drop('median_house_value', axis=1), test['median_house_value']

model = Ridge(alpha=0.001, random_state=seed)
model.fit(X_train, y_train)

pred = model.predict(X_test)

rmse = sqrt(mean_squared_error(y_test, pred))

print(f"RMSE on the test dataset: {rmse}")
